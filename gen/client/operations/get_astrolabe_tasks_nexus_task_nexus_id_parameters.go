// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAstrolabeTasksNexusTaskNexusIDParams creates a new GetAstrolabeTasksNexusTaskNexusIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAstrolabeTasksNexusTaskNexusIDParams() *GetAstrolabeTasksNexusTaskNexusIDParams {
	return &GetAstrolabeTasksNexusTaskNexusIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAstrolabeTasksNexusTaskNexusIDParamsWithTimeout creates a new GetAstrolabeTasksNexusTaskNexusIDParams object
// with the ability to set a timeout on a request.
func NewGetAstrolabeTasksNexusTaskNexusIDParamsWithTimeout(timeout time.Duration) *GetAstrolabeTasksNexusTaskNexusIDParams {
	return &GetAstrolabeTasksNexusTaskNexusIDParams{
		timeout: timeout,
	}
}

// NewGetAstrolabeTasksNexusTaskNexusIDParamsWithContext creates a new GetAstrolabeTasksNexusTaskNexusIDParams object
// with the ability to set a context for a request.
func NewGetAstrolabeTasksNexusTaskNexusIDParamsWithContext(ctx context.Context) *GetAstrolabeTasksNexusTaskNexusIDParams {
	return &GetAstrolabeTasksNexusTaskNexusIDParams{
		Context: ctx,
	}
}

// NewGetAstrolabeTasksNexusTaskNexusIDParamsWithHTTPClient creates a new GetAstrolabeTasksNexusTaskNexusIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAstrolabeTasksNexusTaskNexusIDParamsWithHTTPClient(client *http.Client) *GetAstrolabeTasksNexusTaskNexusIDParams {
	return &GetAstrolabeTasksNexusTaskNexusIDParams{
		HTTPClient: client,
	}
}

/* GetAstrolabeTasksNexusTaskNexusIDParams contains all the parameters to send to the API endpoint
   for the get astrolabe tasks nexus task nexus ID operation.

   Typically these are written to a http.Request.
*/
type GetAstrolabeTasksNexusTaskNexusIDParams struct {

	/* LastFinishedNS.

	     Last finished time seen by this client.  Tasks that have completed after this time tick will be returned, or if no tasks
	have finished, the call will hang until waitTime has passed or a task finishes.  Starting time tick should
	be the finished time of the last task that the caller saw completed on this nexus.  Use 0 to get all finished
	tasks (tasks that have finished and timed out of the server will not be shown)

	*/
	LastFinishedNS int64

	/* TaskNexusID.

	   The nexus to wait on
	*/
	TaskNexusID string

	/* WaitTime.

	   Time to wait (milliseconds) before returning if no tasks   complete
	*/
	WaitTime int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get astrolabe tasks nexus task nexus ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithDefaults() *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get astrolabe tasks nexus task nexus ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithTimeout(timeout time.Duration) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithContext(ctx context.Context) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithHTTPClient(client *http.Client) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLastFinishedNS adds the lastFinishedNS to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithLastFinishedNS(lastFinishedNS int64) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetLastFinishedNS(lastFinishedNS)
	return o
}

// SetLastFinishedNS adds the lastFinishedNS to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetLastFinishedNS(lastFinishedNS int64) {
	o.LastFinishedNS = lastFinishedNS
}

// WithTaskNexusID adds the taskNexusID to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithTaskNexusID(taskNexusID string) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetTaskNexusID(taskNexusID)
	return o
}

// SetTaskNexusID adds the taskNexusId to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetTaskNexusID(taskNexusID string) {
	o.TaskNexusID = taskNexusID
}

// WithWaitTime adds the waitTime to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WithWaitTime(waitTime int64) *GetAstrolabeTasksNexusTaskNexusIDParams {
	o.SetWaitTime(waitTime)
	return o
}

// SetWaitTime adds the waitTime to the get astrolabe tasks nexus task nexus ID params
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) SetWaitTime(waitTime int64) {
	o.WaitTime = waitTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetAstrolabeTasksNexusTaskNexusIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param lastFinishedNS
	qrLastFinishedNS := o.LastFinishedNS
	qLastFinishedNS := swag.FormatInt64(qrLastFinishedNS)
	if qLastFinishedNS != "" {

		if err := r.SetQueryParam("lastFinishedNS", qLastFinishedNS); err != nil {
			return err
		}
	}

	// path param taskNexusID
	if err := r.SetPathParam("taskNexusID", o.TaskNexusID); err != nil {
		return err
	}

	// query param waitTime
	qrWaitTime := o.WaitTime
	qWaitTime := swag.FormatInt64(qrWaitTime)
	if qWaitTime != "" {

		if err := r.SetQueryParam("waitTime", qWaitTime); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
