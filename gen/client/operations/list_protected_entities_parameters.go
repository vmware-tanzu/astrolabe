// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListProtectedEntitiesParams creates a new ListProtectedEntitiesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProtectedEntitiesParams() *ListProtectedEntitiesParams {
	return &ListProtectedEntitiesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProtectedEntitiesParamsWithTimeout creates a new ListProtectedEntitiesParams object
// with the ability to set a timeout on a request.
func NewListProtectedEntitiesParamsWithTimeout(timeout time.Duration) *ListProtectedEntitiesParams {
	return &ListProtectedEntitiesParams{
		timeout: timeout,
	}
}

// NewListProtectedEntitiesParamsWithContext creates a new ListProtectedEntitiesParams object
// with the ability to set a context for a request.
func NewListProtectedEntitiesParamsWithContext(ctx context.Context) *ListProtectedEntitiesParams {
	return &ListProtectedEntitiesParams{
		Context: ctx,
	}
}

// NewListProtectedEntitiesParamsWithHTTPClient creates a new ListProtectedEntitiesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProtectedEntitiesParamsWithHTTPClient(client *http.Client) *ListProtectedEntitiesParams {
	return &ListProtectedEntitiesParams{
		HTTPClient: client,
	}
}

/* ListProtectedEntitiesParams contains all the parameters to send to the API endpoint
   for the list protected entities operation.

   Typically these are written to a http.Request.
*/
type ListProtectedEntitiesParams struct {

	/* IdsAfter.

	   Results will be returned that come after this ID
	*/
	IdsAfter *string

	/* MaxResults.

	   The maximum number of results to return (fewer results may be returned)

	   Format: int32
	*/
	MaxResults *int32

	/* Service.

	   The service to list protected entities from
	*/
	Service string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list protected entities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProtectedEntitiesParams) WithDefaults() *ListProtectedEntitiesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list protected entities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProtectedEntitiesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list protected entities params
func (o *ListProtectedEntitiesParams) WithTimeout(timeout time.Duration) *ListProtectedEntitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list protected entities params
func (o *ListProtectedEntitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list protected entities params
func (o *ListProtectedEntitiesParams) WithContext(ctx context.Context) *ListProtectedEntitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list protected entities params
func (o *ListProtectedEntitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list protected entities params
func (o *ListProtectedEntitiesParams) WithHTTPClient(client *http.Client) *ListProtectedEntitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list protected entities params
func (o *ListProtectedEntitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdsAfter adds the idsAfter to the list protected entities params
func (o *ListProtectedEntitiesParams) WithIdsAfter(idsAfter *string) *ListProtectedEntitiesParams {
	o.SetIdsAfter(idsAfter)
	return o
}

// SetIdsAfter adds the idsAfter to the list protected entities params
func (o *ListProtectedEntitiesParams) SetIdsAfter(idsAfter *string) {
	o.IdsAfter = idsAfter
}

// WithMaxResults adds the maxResults to the list protected entities params
func (o *ListProtectedEntitiesParams) WithMaxResults(maxResults *int32) *ListProtectedEntitiesParams {
	o.SetMaxResults(maxResults)
	return o
}

// SetMaxResults adds the maxResults to the list protected entities params
func (o *ListProtectedEntitiesParams) SetMaxResults(maxResults *int32) {
	o.MaxResults = maxResults
}

// WithService adds the service to the list protected entities params
func (o *ListProtectedEntitiesParams) WithService(service string) *ListProtectedEntitiesParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the list protected entities params
func (o *ListProtectedEntitiesParams) SetService(service string) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *ListProtectedEntitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IdsAfter != nil {

		// query param idsAfter
		var qrIdsAfter string

		if o.IdsAfter != nil {
			qrIdsAfter = *o.IdsAfter
		}
		qIdsAfter := qrIdsAfter
		if qIdsAfter != "" {

			if err := r.SetQueryParam("idsAfter", qIdsAfter); err != nil {
				return err
			}
		}
	}

	if o.MaxResults != nil {

		// query param maxResults
		var qrMaxResults int32

		if o.MaxResults != nil {
			qrMaxResults = *o.MaxResults
		}
		qMaxResults := swag.FormatInt32(qrMaxResults)
		if qMaxResults != "" {

			if err := r.SetQueryParam("maxResults", qMaxResults); err != nil {
				return err
			}
		}
	}

	// path param service
	if err := r.SetPathParam("service", o.Service); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
