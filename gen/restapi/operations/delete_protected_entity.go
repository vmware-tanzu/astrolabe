// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteProtectedEntityHandlerFunc turns a function with the right signature into a delete protected entity handler
type DeleteProtectedEntityHandlerFunc func(DeleteProtectedEntityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteProtectedEntityHandlerFunc) Handle(params DeleteProtectedEntityParams) middleware.Responder {
	return fn(params)
}

// DeleteProtectedEntityHandler interface for that can handle valid delete protected entity params
type DeleteProtectedEntityHandler interface {
	Handle(DeleteProtectedEntityParams) middleware.Responder
}

// NewDeleteProtectedEntity creates a new http.Handler for the delete protected entity operation
func NewDeleteProtectedEntity(ctx *middleware.Context, handler DeleteProtectedEntityHandler) *DeleteProtectedEntity {
	return &DeleteProtectedEntity{Context: ctx, Handler: handler}
}

/* DeleteProtectedEntity swagger:route DELETE /astrolabe/{service}/{protectedEntityID} deleteProtectedEntity

Deletes a protected entity or snapshot of a protected entity (if the
snapshot ID is specified)


*/
type DeleteProtectedEntity struct {
	Context *middleware.Context
	Handler DeleteProtectedEntityHandler
}

func (o *DeleteProtectedEntity) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteProtectedEntityParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
