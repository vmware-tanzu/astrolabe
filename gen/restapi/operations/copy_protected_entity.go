// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CopyProtectedEntityHandlerFunc turns a function with the right signature into a copy protected entity handler
type CopyProtectedEntityHandlerFunc func(CopyProtectedEntityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CopyProtectedEntityHandlerFunc) Handle(params CopyProtectedEntityParams) middleware.Responder {
	return fn(params)
}

// CopyProtectedEntityHandler interface for that can handle valid copy protected entity params
type CopyProtectedEntityHandler interface {
	Handle(CopyProtectedEntityParams) middleware.Responder
}

// NewCopyProtectedEntity creates a new http.Handler for the copy protected entity operation
func NewCopyProtectedEntity(ctx *middleware.Context, handler CopyProtectedEntityHandler) *CopyProtectedEntity {
	return &CopyProtectedEntity{Context: ctx, Handler: handler}
}

/* CopyProtectedEntity swagger:route POST /astrolabe/{service} copyProtectedEntity

Copy a protected entity into the repository.  There is no option to
embed data on this path, for a self-contained or partially
self-contained object, use the restore from zip file option in the S3
API REST API


*/
type CopyProtectedEntity struct {
	Context *middleware.Context
	Handler CopyProtectedEntityHandler
}

func (o *CopyProtectedEntity) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCopyProtectedEntityParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
